FROM python:3.11-slim as builder

WORKDIR /app

# Установка системных зависимостей
RUN apt-get update && apt-get install -y \
    gcc \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Копирование requirements.txt
COPY requirements.txt .

# Установка Python зависимостей
RUN pip install --no-cache-dir -r requirements.txt

# Копирование кода приложения
COPY . .

# Создание пользователя
RUN useradd -m -u 1002 django

# Создание директорий с правильными правами
RUN mkdir -p /app/staticfiles /app/media && chown -R django:django /app

# Сборка статических файлов
USER django
RUN python manage.py collectstatic --noinput

# Финальный образ
FROM python:3.11-slim

WORKDIR /app

# Установка только runtime зависимостей
RUN apt-get update && apt-get install -y \
    postgresql-client \
    && rm -rf /var/lib/apt/lists/*

# Копирование Python зависимостей
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Копирование кода и статических файлов
COPY --from=builder /app /app

# Создание пользователя
RUN useradd -m -u 1002 django && chown -R django:django /app

# Проверяем и копируем медиа файлы если они есть
RUN if [ -d "/app/media" ] && [ "$(ls -A /app/media)" ]; then \
        echo "Медиа файлы найдены"; \
    else \
        echo "Медиа файлы не найдены, создаем пустую директорию"; \
        mkdir -p /app/media; \
    fi

USER django

EXPOSE 8000

CMD ["gunicorn", "--bind", "0.0.0.0:8000", "--workers", "3", "star_burger.wsgi:application"]