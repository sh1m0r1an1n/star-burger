version: '3.8'

services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: star_burger_dev
      POSTGRES_USER: star_burger_user
      POSTGRES_PASSWORD: star_burger_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://star_burger_user:star_burger_password@db:5432/star_burger_dev
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALLOWED_HOSTS=localhost,127.0.0.1
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    ports:
      - "8000:8000"
    depends_on:
      - db
    command: python manage.py runserver 0.0.0.0:8000

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    volumes:
      - ./frontend/src:/app/src
      - ./backend/static/bundles:/app/bundles
    ports:
      - "1234:1234"
    command: npx parcel watch src/index.js --dist-dir bundles --public-url="./" --host 0.0.0.0

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data:
  static_volume:
  media_volume: