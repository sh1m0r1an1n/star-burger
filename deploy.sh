#!/bin/bash

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π Star Burger..."

cd /opt/star-burger

echo "üì• –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è..."
git pull origin master

echo "üé® –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥..."
docker run --rm -v $(pwd):/app -w /app node:16.16.0-alpine sh -c "
    npm ci --only=production
    npx parcel build bundles-src/index.js --dist-dir bundles --public-url='./'
"

echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.prod.yaml down

echo "üî® –°–æ–±–∏—Ä–∞–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–∑—ã..."
docker-compose -f docker-compose.prod.yaml build

echo "‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
docker-compose -f docker-compose.prod.yaml up -d

echo "‚è≥ –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sleep 10

echo "üóÑÔ∏è –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
docker-compose -f docker-compose.prod.yaml exec -T backend python manage.py migrate

echo "üë§ –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è..."
docker-compose -f docker-compose.prod.yaml exec -T backend python manage.py createsuperuser --noinput --username admin --email admin@gmail.com || echo "–°—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
docker-compose -f docker-compose.prod.yaml exec -T backend python manage.py shell -c "from django.contrib.auth.models import User; u = User.objects.get(username='admin'); u.set_password('admin'); u.save()" || echo "–ü–∞—Ä–æ–ª—å —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

echo "üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ JSON..."
docker-compose -f docker-compose.prod.yaml exec -T backend python manage.py loaddata data_utf8_fixed.json || echo "–î–∞–Ω–Ω—ã–µ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã"

echo "üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã..."
docker-compose -f docker-compose.prod.yaml exec -T backend python manage.py collectstatic --noinput

echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
mkdir -p nginx/ssl
if [ -f /etc/letsencrypt/live/burger-star.ru/fullchain.pem ]; then
    echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã..."
    sudo cp /etc/letsencrypt/live/burger-star.ru/fullchain.pem nginx/ssl/
    sudo cp /etc/letsencrypt/live/burger-star.ru/privkey.pem nginx/ssl/
    sudo chown root:root nginx/ssl/*
    sudo chmod 644 nginx/ssl/*
else
    echo "‚ö†Ô∏è SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ª—É—á–∏—Ç–µ –∏—Ö –≤—Ä—É—á–Ω—É—é:"
    echo "sudo certbot certonly --manual --preferred-challenges dns -d burger-star.ru -d www.burger-star.ru"
fi

echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º Nginx..."
docker-compose -f docker-compose.prod.yaml restart nginx

echo "üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ SSL..."
sudo cp systemd/certbot-renewal.service /etc/systemd/system/
sudo cp systemd/certbot-renewal.timer /etc/systemd/system/
sudo systemctl daemon-reload
sudo systemctl enable certbot-renewal.timer
sudo systemctl start certbot-renewal.timer

echo "üìä –£–≤–µ–¥–æ–º–ª—è–µ–º Rollbar –æ –¥–µ–ø–ª–æ–µ..."
export $(grep -v '^#' /opt/star-burger/.env | xargs)
COMMIT_HASH=$(git rev-parse HEAD)
curl -X POST "https://api.rollbar.com/api/1/deploy/" \
  -H "Content-Type: application/json" \
  -d "{
    \"access_token\": \"$ROLLBAR_ACCESS_TOKEN\",
    \"environment\": \"$ROLLBAR_ENVIRONMENT\",
    \"revision\": \"$COMMIT_HASH\",
    \"local_username\": \"$(whoami)\",
    \"comment\": \"Docker deployment\"
  }"

echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://burger-star.ru"
echo "üîó IP –∞–¥—Ä–µ—Å: http://45.131.42.195"
echo "üë§ –ê–¥–º–∏–Ω–∫–∞: https://burger-star.ru/admin/ (admin/admin)"
